/* FILE: yystageisotropicmel.h                 -*-Mode: c++-*-
 *
 * Magnetoelastic energy with isotropic coefficient
 * 
 */

#ifndef _YY_STAGEISOTROPICMEL
#define _YY_STAGEISOTROPICMEL

#include <string>
#include <vector>

#include "oc.h"
#include "director.h"
#include "energy.h"
#include "meshvalue.h"
#include "simstate.h"
#include "threevector.h"
#include "vectorfield.h"
#include "util.h"
#include "output.h"

#include "yy_mel_util.h"

/* End includes */

class YY_StageIsotropicMEL:public Oxs_Energy {
private:
  // Isotropic magnetoelastic coefficient MELCoef = B1 = B2 (J/m^3)
  Oxs_OwnedPointer<Oxs_ScalarField> MELCoef_init;
  mutable Oxs_MeshValue<OC_REAL8m> MELCoef;
  mutable Oxs_OwnedPointer<Oxs_VectorField> displacement_init;
  mutable Oxs_MeshValue<Oxs_ThreeVector> displacement;

  mutable YY_Strain strain;

  // The following members were cribbed from stagezeeman.h
  OC_REAL8m hmult;  // multiplier
  OC_UINT4m number_of_stages;

  mutable OC_UINT4m mesh_id;
  mutable OC_BOOL stage_valid;
  mutable OC_UINT4m working_stage;  // Stage index
  mutable Oxs_OwnedPointer<Oxs_VectorField> stagefield_init;
  mutable Oxs_MeshValue<ThreeVector> stagefield;
  mutable ThreeVector max_field;
  /// stagefield is a cached value filled by
  /// stagefield_init when a change in mesh or
  /// stage is detected.  stagefield_init is updated
  /// when a change in stage is detected.  The stage_valid
  /// boolean is set false in the constructor and Init();
  /// It's purpose is to insure proper setup of stagefield_init
  /// on the first pass.
  ///  The max_field cache value is the field at the point
  /// of maximum magnitude in stagefield.  It is cached
  /// for B_MEL output below.  Units are A/m.

  // Vector field may be specified by *either* a list of
  // files, or else a Tcl command that returns a vector
  // field spec.  This is set up in the Oxs_StageZeeman
  // constructor.  The choice is determined elsewhere by
  // examining the length of filelist; if it is >0, then
  // the list of files method is used, otherwise cmd is
  // called with the stage number as the single appended
  // argument.
  vector<String> filelist;
  Nb_TclCommand cmd;

  // Cache update routines
  void ChangeDisplacementInitializer(OC_UINT4m stage, const Oxs_Mesh* mesh) const;
  void FillDisplacementCache(const Oxs_SimState&) const;
  void UpdateCache(const Oxs_SimState& state) const;

  // Additional outputs
  Oxs_ScalarOutput<YY_StageIsotropicMEL> B_MEL_output;
  Oxs_ScalarOutput<YY_StageIsotropicMEL> B_MELx_output;
  Oxs_ScalarOutput<YY_StageIsotropicMEL> B_MELy_output;
  Oxs_ScalarOutput<YY_StageIsotropicMEL> B_MELz_output;
  void Fill__B_MEL_output(const Oxs_SimState& state);

  void CalculateMELField(const Oxs_SimState& state) const;

protected:
  virtual void GetEnergy(const Oxs_SimState& state,
      Oxs_EnergyData& oed) const;
//  virtual void GetEnergy(const Oxs_SimState& state,
//			 Oxs_EnergyData& oed) const;

public:
  virtual const char* ClassName() const; // ClassName() is
  /// automatically generated by the OXS_EXT_REGISTER macro.
  YY_StageIsotropicMEL(const char* name,     // Child instance id
		    Oxs_Director* newdtr, // App director
		    const char* argstr);  // MIF input block parameters
  virtual ~YY_StageIsotropicMEL();
  virtual OC_BOOL Init();
  virtual void StageRequestCount(unsigned int& min,
      unsigned int& max) const;

  // For debug. Display variables in specified range
  void DisplayValues(
      const Oxs_SimState& state,
      OC_INDEX xmin, OC_INDEX xmax,
      OC_INDEX ymin, OC_INDEX ymax,
      OC_INDEX zmin, OC_INDEX zmax) const;

};

#endif // _YY_STAGEISOTROPICMEL
